setcps (220/4/100)

#####################
# GLOBAL PARAMETERS #
#####################

let room_amt = 0.25

let room_size = 0.50

#########
# HIHAT #
#########

do 
  let hihat_sample_bank = "hh27"
  let hihat = "hh27*16"
  let hihat_num_samples = 6
  let hihat_degradeBy = 0.25
  let hihat_gain = 1.0
  p "hihat" $ degradeBy hihat_degradeBy $ s hihat # n (irand hihat_num_samples)
    # gain hihat_gain

p "hihat" silence

solo "hihat"

unsolo "hihat"

-- Test Samples
p "hihat" $ slow hihat_num_samples $ n (run hihat_num_samples) # s hihat
  # gain hihat_gain

############
# BASSDRUM #
############

do 
  let bassdrum_sample_bank = "db"
  let bassdrum = "db*8"
  let bassdrum_num_samples = 13
  let bassdrum_degradeBy = 0.50 
  let bassdrum_gain = 1.0
  p "bassdrum" $ degradeBy bassdrum_degradeBy $ s bassdrum # n (irand bassdrum_num_samples)
    # gain bassdrum_gain

p "bassdrum" silence

solo "bassdrum"

unsolo "bassdrum"

-- Test Samples
p "bassdrum" $ slow bassdrum_num_samples $ n (run bassdrum_num_samples) # s bassdrum 
  # gain bassdrum_gain

#########
# SNARE #
#########

do
  let snare_sample_bank = "sn"
  let snare = "sn*16"
  let snare_num_samples = 52
  let snare_degradeBy = 0.75 
  let snare_gain = 0.70
  p "snare" $ degradeBy snare_degradeBy $ s snare # n (irand snare_num_samples)
    # gain snare_gain

p "snare" silence

solo "snare"

unsolo "snare"

-- Test Samples
p "snare" $ slow snare_num_samples $ n (run snare_num_samples) # s snare 
  # gain snare_gain

#########
# CLICK #
#########

do
  let click = "click*16"
  let click_num_samples = 4 
  let click_gain = 0.90
  let click_degradeBy = 0.25
  p "click" $ degradeBy click_degradeBy $ s click # n (irand click_num_samples)
    # gain click_gain

p "click" silence

solo "click"

unsolo "click"

-- Test Samples
p "click" $ slow click_num_samples $ n (run click_num_samples) # s click 
  # gain click_gain

##############
# PERCUSSION #
##############

do
  let perc = "can*16"
  let perc_num_samples = 14 
  let perc_gain = 0.90
  let perc_degradeBy = 0.25
  p "perc" $ degradeBy perc_degradeBy $ s perc # n (irand perc_num_samples)
    # gain perc_gain

p "perc" silence

solo "perc"

unsolo "perc"

-- Test Samples
p "perc" $ slow perc_num_samples $ n (run perc_num_samples) # s perc 
  # gain perc_gain

#######
# EFX #
#######

do
  let efx = "glitch*16"
  let efx_num_samples = 8 
  let efx_gain = 0.75
  let efx_degradeBy = 0.50
  p "efx" $ degradeBy efx_degradeBy $ s efx # n (irand efx_num_samples)
    # gain efx_gain

p "efx" silence

solo "efx"

unsolo "efx"

-- Test Samples
p "efx" $ slow efx_num_samples $ n (run efx_num_samples) # s efx 
  # gain efx_gain

hush
